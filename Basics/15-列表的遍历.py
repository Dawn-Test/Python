# 字符串的元素不能修改，元素单一，列表可以修改
# list 列表
# 缺点：1.在指定位置插入和删除元素，会造成元素的移动，效率低。
#     2，根据关键字去查找数据的话，效率比较低
# 优点：尾部插入和删除袁术效率较高
# 1，insert在指定位置插入
# 2，append在尾部插入元素
# 3，pop删除尾部元素或者删除指定位置元素
# 4，remove删除指定值元素
# 5.clear 清空列表
# 6.sort，对列表中的元素进行排序，默认从小到大，需要指定 reverse = true，可以实现降序操作
# 7，reverse 对列表中的元素进行逆序
# 8.index 根据值查找某个元素，并返回该元素在列表中索引，查找不到会报错，终止程序运行。
# 9，将一个列表中的元素追加到当前列表中的尾部


# my_list = []


# 创建一个空列表
my_list = [10,20,30]
# 创建一个带数字元素的列表
my_list = ['aaa','bbb','ccc']
# 创建一个带字符串类型的元素
my_list = [1,2,3],[4,5,6,],[7,8,9]

# 列表里面可以再次放入另外列表

my_list = [1,2,'aa',[3,45,5]]
# 列表中也可以存放不同类型的元素

# 建议列表中存放相同类型的数据！！！

# 列表是序列式容器，支持索引、切片
my_list = [10,20,30,40]
print(my_list[0],my_list[3])
print(my_list[:2])

# 1.列表的遍历
index = 0
while index < len(my_list):
    print(my_list[index])
    index += 1
# len 是计算列表的个数

# 2.for循环一般用于容器中元素的遍历
for a in my_list :
    print(a)


# 打印出列表的每一个元素，循环嵌套循环
my_list = [[10,20,30],[40,50,60],[70,80,90]]
i = 0
while i <len(my_list):
    j = 0
    while j <len(my_list):
        print(my_list[i][j])
        j +=1
    i +=1